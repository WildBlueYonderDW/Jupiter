#using scripts\unittest\util;

#namespace namespace_eb31a7ea746bf7d0;

// Namespace namespace_eb31a7ea746bf7d0 / namespace_5c22773341178193
// Params 0, eflags: 0x0
// Checksum 0x0, Offset: 0x5b5
// Size: 0x3e07
function player_pers() {
    while (!(isdefined(level.players[0]) && isdefined(level.players) && isdefined(level.players[0].pers))) {
        waitframe();
    }
    test_begin("player.pers");
    player = level.players[0];
    perscopy = undefined;
    varcopy = undefined;
    structcopy = undefined;
    arraycopy = undefined;
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Baseline");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    varcopy = player.pers["ut_var"];
    structcopy = player.pers["ut_struct"];
    arraycopy = player.pers["ut_array"];
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Read non-existent variables");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    perscopy = player.pers;
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Make copy of player.pers");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    player.pers["ut_var"] = "a";
    s1 = spawnstruct();
    s1.b = "b";
    s1.c = "c";
    player.pers["ut_struct"] = s1;
    a1 = [];
    a1["d"] = "d";
    a1["e"] = "e";
    player.pers["ut_array"] = a1;
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Add new fields to player.pers");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    perscopy = player.pers;
    varcopy = player.pers["ut_var"];
    structcopy = player.pers["ut_struct"];
    arraycopy = player.pers["ut_array"];
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Re-copy everything from player.pers");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    perscopy["ut_var"] = "aa";
    perscopy["ut_struct"].b = "bb";
    perscopy["ut_struct"].c = "cc";
    perscopy["ut_array"]["d"] = "dd";
    perscopy["ut_array"]["e"] = "ee";
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Update player.pers copy fields");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    varcopy = "aaa";
    structcopy.b = "bbb";
    structcopy.c = "ccc";
    arraycopy["d"] = "ddd";
    arraycopy["e"] = "eee";
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Update the copies");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    perscopy = player.pers;
    varcopy = player.pers["ut_var"];
    structcopy = player.pers["ut_struct"];
    arraycopy = player.pers["ut_array"];
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Re-copy everything from player.pers");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    player.pers["ut_var"] = "aaaa";
    player.pers["ut_struct"].b = "bbbb";
    player.pers["ut_struct"].c = "cccc";
    player.pers["ut_array"]["d"] = "dddd";
    player.pers["ut_array"]["e"] = "eeee";
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Update player.pers fields");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    player.pers["ut_var"] = undefined;
    player.pers["ut_struct"] = undefined;
    player.pers["ut_array"] = undefined;
    test_print("-------------------------------------------------------------------------------");
    test_print("" + "Delete player.pers fields");
    test_print("    player.pers.size             - " + (isdefined(player.pers) && isdefined(player.pers.size) ? "" + player.pers.size : "<UNDEFINED>"));
    test_print("    player.pers['ut_var']        - " + (isdefined(player.pers) && isdefined(player.pers["ut_var"]) ? "" + player.pers["ut_var"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].b   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].b) ? "" + player.pers["ut_struct"].b : "<UNDEFINED>"));
    test_print("    player.pers['ut_struct'].c   - " + (isdefined(player.pers["ut_struct"]) && isdefined(player.pers) && isdefined(player.pers["ut_struct"].c) ? "" + player.pers["ut_struct"].c : "<UNDEFINED>"));
    test_print("    player.pers['ut_array'].size - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"].size) ? "" + player.pers["ut_array"].size : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['d'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["d"]) ? "" + player.pers["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    player.pers['ut_array']['e'] - " + (isdefined(player.pers["ut_array"]) && isdefined(player.pers) && isdefined(player.pers["ut_array"]["e"]) ? "" + player.pers["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    persCopy.size                - " + (isdefined(perscopy) && isdefined(perscopy.size) ? "" + perscopy.size : "<UNDEFINED>"));
    test_print("    persCopy['ut_var']           - " + (isdefined(perscopy) && isdefined(perscopy["ut_var"]) ? "" + perscopy["ut_var"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].b      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].b) ? "" + perscopy["ut_struct"].b : "<UNDEFINED>"));
    test_print("    persCopy['ut_struct'].c      - " + (isdefined(perscopy["ut_struct"]) && isdefined(perscopy) && isdefined(perscopy["ut_struct"].c) ? "" + perscopy["ut_struct"].c : "<UNDEFINED>"));
    test_print("    persCopy['ut_array'].size    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"].size) ? "" + perscopy["ut_array"].size : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['d']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["d"]) ? "" + perscopy["ut_array"]["d"] : "<UNDEFINED>"));
    test_print("    persCopy['ut_array']['e']    - " + (isdefined(perscopy["ut_array"]) && isdefined(perscopy) && isdefined(perscopy["ut_array"]["e"]) ? "" + perscopy["ut_array"]["e"] : "<UNDEFINED>"));
    test_print("    varCopy                      - " + (isdefined(varcopy) ? "" + varcopy : "<UNDEFINED>"));
    test_print("    structCopy.b                 - " + (isdefined(structcopy) && isdefined(structcopy.b) ? "" + structcopy.b : "<UNDEFINED>"));
    test_print("    structCopy.c                 - " + (isdefined(structcopy) && isdefined(structcopy.c) ? "" + structcopy.c : "<UNDEFINED>"));
    test_print("    arrayCopy.size               - " + (isdefined(arraycopy) && isdefined(arraycopy.size) ? "" + arraycopy.size : "<UNDEFINED>"));
    test_print("    arrayCopy['d']               - " + (isdefined(arraycopy) && isdefined(arraycopy["d"]) ? "" + arraycopy["d"] : "<UNDEFINED>"));
    test_print("    arrayCopy['e']               - " + (isdefined(arraycopy) && isdefined(arraycopy["e"]) ? "" + arraycopy["e"] : "<UNDEFINED>"));
    test_end("player.pers");
}

// Namespace namespace_eb31a7ea746bf7d0 / namespace_5c22773341178193
// Params 0, eflags: 0x0
// Checksum 0x0, Offset: 0x43c4
// Size: 0x9
function main() {
    player_pers();
}

